version: "3.5"

services:
  postgres:
    image: postgres:${POSTGRES_VERSION:-11.5-alpine}
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    secrets:
      - postgres_db
      - postgres_password
      - postgres_user
    shm_size: "2gb"
    volumes:
      - /opt/cardano/cnode/volumes/data/pgdata:/var/lib/postgresql/data
    restart: on-failure
    logging:
      driver: "gcplogs"
      options:
        labels: "node=postgres"
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: on-failure
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: "josgraha@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "secretS@uC3"
      PGADMIN_LISTEN_PORT: 80
    expose:
      - 8080
    ports:
      - "8080:80"
    volumes:
      - /opt/cardano/cnode/volumes/data/pgadmin-data:/var/lib/pgadmin
    links:
      - "postgres:pgsql-server"
    logging:
      driver: "gcplogs"
      options:
        labels: "node=pgadmin"
  cardano-db-sync-extended:
    image: inputoutput/cardano-db-sync:${CARDANO_DB_SYNC_VERSION:-9.0.0}
    command:
      [
        "--config",
        "/config/cardano-db-sync/config.json",
        "--socket-path",
        "/node-ipc/node.socket",
        "--state-dir",
        "/data"
      ]
    environment:
      - EXTENDED=true
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    depends_on:
      - postgres
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - type: bind
        source: ./config/network/${NETWORK:-mainnet}
        target: /config
      - type: bind
        source: /opt/cardano/cnode/volumes/data/db
        target: /data
      - type: bind
        source: /opt/cardano/cnode/sockets
        target: /node-ipc
    restart: on-failure
    logging:
      driver: "gcplogs"
      options:
        labels: "node=cardano-db-sync"
  hasura:
    build:
      context: ./packages/api-cardano-db-hasura/hasura
    image: inputoutput/cardano-graphql-hasura:${CARDANO_GRAPHQL_VERSION:-4.0.0}
    ports:
      - ${HASURA_PORT:-8090}:8080
    depends_on:
      - "postgres"
    restart: on-failure
    environment:
      - HASURA_GRAPHQL_ENABLE_CONSOLE=true
    secrets:
      - postgres_db
      - postgres_password
      - postgres_user
    logging:
      driver: "gcplogs"
      options:
        labels: "node=hasura"
  cardano-graphql:
    build:
      context: .
      target: server
      args:
        - NETWORK=${NETWORK:-mainnet}
        - METADATA_SERVER_URI=${METADATA_SERVER_URI:-https://metadata.cardano.org/metadata}
    image: inputoutput/cardano-graphql:${CARDANO_GRAPHQL_VERSION:-4.0.0}
    environment:
      - ALLOW_INTROSPECTION=true
      - CACHE_ENABLED=true
      - LOGGER_MIN_SEVERITY=${LOGGER_MIN_SEVERITY:-info}
      - CARDANO_CLI_PATH=${CARDANO_CLI_PATH:-/opt/cardano/bin/cardano-cli}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-*.iuxta-casus.com}
      - CARDANO_NODE_SOCKET_PATH=${CARDANO_NODE_SOCKET_PATH:-/node-ipc/node.socket}
    expose:
      - ${API_PORT:-3100}
    ports:
      - ${API_PORT:-3100}:3100
    restart: on-failure
    secrets:
      - postgres_db
      - postgres_password
      - postgres_user
    logging:
      driver: "gcplogs"
      options:
        labels: "node=cardano-graphql"
    volumes:
      - type: bind
        source: /opt/cardano/cnode/sockets
        target: /node-ipc
      - type: bind
        source: /home/cloudservice/.cabal/bin
        target: /opt/cardano/bin
      - type: bind
        source: /opt/cardano/cnode/cardano-graphql/config/network/mainnet
        target: /config
secrets:
  postgres_db:
    file: ./config/secrets/postgres_db
  postgres_password:
    file: ./config/secrets/postgres_password
  postgres_user:
    file: ./config/secrets/postgres_user
